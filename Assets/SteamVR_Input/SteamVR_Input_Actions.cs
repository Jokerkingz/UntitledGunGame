//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Vector2 p_buggy_Steering;
        
        private static SteamVR_Action_Single p_buggy_Throttle;
        
        private static SteamVR_Action_Boolean p_buggy_Brake;
        
        private static SteamVR_Action_Boolean p_buggy_Reset;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LIndexBool;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LIndexTouch;
        
        private static SteamVR_Action_Single p_upgradeInput_LIndexPress;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LMiddleBool;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LMiddleTouch;
        
        private static SteamVR_Action_Single p_upgradeInput_LMiddlePress;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbX;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbXRest;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbY;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbYRest;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbMenu;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbMenuRest;
        
        private static SteamVR_Action_Vector2 p_upgradeInput_LThumbAnal;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbAnalPress;
        
        private static SteamVR_Action_Boolean p_upgradeInput_LThumbAnalRest;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RIndexBool;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RIndexTouch;
        
        private static SteamVR_Action_Single p_upgradeInput_RIndexPress;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RMiddleBool;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RMiddleTouch;
        
        private static SteamVR_Action_Single p_upgradeInput_RMiddlePress;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbA;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbARest;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbB;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbBRest;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbMenu;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbMenuRest;
        
        private static SteamVR_Action_Vector2 p_upgradeInput_RThumbAnal;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbAnalPress;
        
        private static SteamVR_Action_Boolean p_upgradeInput_RThumbAnalRest;
        
        private static SteamVR_Action_Vibration p_upgradeInput_LShake;
        
        private static SteamVR_Action_Vibration p_upgradeInput_RShake;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 buggy_Steering
        {
            get
            {
                return SteamVR_Actions.p_buggy_Steering.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single buggy_Throttle
        {
            get
            {
                return SteamVR_Actions.p_buggy_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Brake
        {
            get
            {
                return SteamVR_Actions.p_buggy_Brake.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Reset
        {
            get
            {
                return SteamVR_Actions.p_buggy_Reset.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LIndexBool
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LIndexBool.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LIndexTouch
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LIndexTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single upgradeInput_LIndexPress
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LIndexPress.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LMiddleBool
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LMiddleBool.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LMiddleTouch
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LMiddleTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single upgradeInput_LMiddlePress
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LMiddlePress.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbX
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbX.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbXRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbXRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbY
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbY.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbYRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbYRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbMenu
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbMenu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbMenuRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbMenuRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 upgradeInput_LThumbAnal
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbAnal.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbAnalPress
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbAnalPress.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_LThumbAnalRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LThumbAnalRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RIndexBool
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RIndexBool.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RIndexTouch
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RIndexTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single upgradeInput_RIndexPress
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RIndexPress.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RMiddleBool
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RMiddleBool.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RMiddleTouch
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RMiddleTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single upgradeInput_RMiddlePress
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RMiddlePress.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbA
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbA.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbARest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbARest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbB
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbB.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbBRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbBRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbMenu
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbMenu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbMenuRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbMenuRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 upgradeInput_RThumbAnal
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbAnal.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbAnalPress
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbAnalPress.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean upgradeInput_RThumbAnalRest
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RThumbAnalRest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration upgradeInput_LShake
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_LShake.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vibration upgradeInput_RShake
        {
            get
            {
                return SteamVR_Actions.p_upgradeInput_RShake.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.upgradeInput_LIndexBool,
                    SteamVR_Actions.upgradeInput_LIndexTouch,
                    SteamVR_Actions.upgradeInput_LIndexPress,
                    SteamVR_Actions.upgradeInput_LMiddleBool,
                    SteamVR_Actions.upgradeInput_LMiddleTouch,
                    SteamVR_Actions.upgradeInput_LMiddlePress,
                    SteamVR_Actions.upgradeInput_LThumbX,
                    SteamVR_Actions.upgradeInput_LThumbXRest,
                    SteamVR_Actions.upgradeInput_LThumbY,
                    SteamVR_Actions.upgradeInput_LThumbYRest,
                    SteamVR_Actions.upgradeInput_LThumbMenu,
                    SteamVR_Actions.upgradeInput_LThumbMenuRest,
                    SteamVR_Actions.upgradeInput_LThumbAnal,
                    SteamVR_Actions.upgradeInput_LThumbAnalPress,
                    SteamVR_Actions.upgradeInput_LThumbAnalRest,
                    SteamVR_Actions.upgradeInput_RIndexBool,
                    SteamVR_Actions.upgradeInput_RIndexTouch,
                    SteamVR_Actions.upgradeInput_RIndexPress,
                    SteamVR_Actions.upgradeInput_RMiddleBool,
                    SteamVR_Actions.upgradeInput_RMiddleTouch,
                    SteamVR_Actions.upgradeInput_RMiddlePress,
                    SteamVR_Actions.upgradeInput_RThumbA,
                    SteamVR_Actions.upgradeInput_RThumbARest,
                    SteamVR_Actions.upgradeInput_RThumbB,
                    SteamVR_Actions.upgradeInput_RThumbBRest,
                    SteamVR_Actions.upgradeInput_RThumbMenu,
                    SteamVR_Actions.upgradeInput_RThumbMenuRest,
                    SteamVR_Actions.upgradeInput_RThumbAnal,
                    SteamVR_Actions.upgradeInput_RThumbAnalPress,
                    SteamVR_Actions.upgradeInput_RThumbAnalRest,
                    SteamVR_Actions.upgradeInput_LShake,
                    SteamVR_Actions.upgradeInput_RShake};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.upgradeInput_LIndexBool,
                    SteamVR_Actions.upgradeInput_LIndexTouch,
                    SteamVR_Actions.upgradeInput_LIndexPress,
                    SteamVR_Actions.upgradeInput_LMiddleBool,
                    SteamVR_Actions.upgradeInput_LMiddleTouch,
                    SteamVR_Actions.upgradeInput_LMiddlePress,
                    SteamVR_Actions.upgradeInput_LThumbX,
                    SteamVR_Actions.upgradeInput_LThumbXRest,
                    SteamVR_Actions.upgradeInput_LThumbY,
                    SteamVR_Actions.upgradeInput_LThumbYRest,
                    SteamVR_Actions.upgradeInput_LThumbMenu,
                    SteamVR_Actions.upgradeInput_LThumbMenuRest,
                    SteamVR_Actions.upgradeInput_LThumbAnal,
                    SteamVR_Actions.upgradeInput_LThumbAnalPress,
                    SteamVR_Actions.upgradeInput_LThumbAnalRest,
                    SteamVR_Actions.upgradeInput_RIndexBool,
                    SteamVR_Actions.upgradeInput_RIndexTouch,
                    SteamVR_Actions.upgradeInput_RIndexPress,
                    SteamVR_Actions.upgradeInput_RMiddleBool,
                    SteamVR_Actions.upgradeInput_RMiddleTouch,
                    SteamVR_Actions.upgradeInput_RMiddlePress,
                    SteamVR_Actions.upgradeInput_RThumbA,
                    SteamVR_Actions.upgradeInput_RThumbARest,
                    SteamVR_Actions.upgradeInput_RThumbB,
                    SteamVR_Actions.upgradeInput_RThumbBRest,
                    SteamVR_Actions.upgradeInput_RThumbMenu,
                    SteamVR_Actions.upgradeInput_RThumbMenuRest,
                    SteamVR_Actions.upgradeInput_RThumbAnal,
                    SteamVR_Actions.upgradeInput_RThumbAnalPress,
                    SteamVR_Actions.upgradeInput_RThumbAnalRest};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.upgradeInput_LShake,
                    SteamVR_Actions.upgradeInput_RShake};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.upgradeInput_LShake,
                    SteamVR_Actions.upgradeInput_RShake};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.upgradeInput_LIndexBool,
                    SteamVR_Actions.upgradeInput_LIndexTouch,
                    SteamVR_Actions.upgradeInput_LMiddleBool,
                    SteamVR_Actions.upgradeInput_LMiddleTouch,
                    SteamVR_Actions.upgradeInput_LThumbX,
                    SteamVR_Actions.upgradeInput_LThumbXRest,
                    SteamVR_Actions.upgradeInput_LThumbY,
                    SteamVR_Actions.upgradeInput_LThumbYRest,
                    SteamVR_Actions.upgradeInput_LThumbMenu,
                    SteamVR_Actions.upgradeInput_LThumbMenuRest,
                    SteamVR_Actions.upgradeInput_LThumbAnalPress,
                    SteamVR_Actions.upgradeInput_LThumbAnalRest,
                    SteamVR_Actions.upgradeInput_RIndexBool,
                    SteamVR_Actions.upgradeInput_RIndexTouch,
                    SteamVR_Actions.upgradeInput_RMiddleBool,
                    SteamVR_Actions.upgradeInput_RMiddleTouch,
                    SteamVR_Actions.upgradeInput_RThumbA,
                    SteamVR_Actions.upgradeInput_RThumbARest,
                    SteamVR_Actions.upgradeInput_RThumbB,
                    SteamVR_Actions.upgradeInput_RThumbBRest,
                    SteamVR_Actions.upgradeInput_RThumbMenu,
                    SteamVR_Actions.upgradeInput_RThumbMenuRest,
                    SteamVR_Actions.upgradeInput_RThumbAnalPress,
                    SteamVR_Actions.upgradeInput_RThumbAnalRest};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.upgradeInput_LIndexPress,
                    SteamVR_Actions.upgradeInput_LMiddlePress,
                    SteamVR_Actions.upgradeInput_RIndexPress,
                    SteamVR_Actions.upgradeInput_RMiddlePress};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.upgradeInput_LThumbAnal,
                    SteamVR_Actions.upgradeInput_RThumbAnal};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.upgradeInput_LIndexBool,
                    SteamVR_Actions.upgradeInput_LIndexTouch,
                    SteamVR_Actions.upgradeInput_LIndexPress,
                    SteamVR_Actions.upgradeInput_LMiddleBool,
                    SteamVR_Actions.upgradeInput_LMiddleTouch,
                    SteamVR_Actions.upgradeInput_LMiddlePress,
                    SteamVR_Actions.upgradeInput_LThumbX,
                    SteamVR_Actions.upgradeInput_LThumbXRest,
                    SteamVR_Actions.upgradeInput_LThumbY,
                    SteamVR_Actions.upgradeInput_LThumbYRest,
                    SteamVR_Actions.upgradeInput_LThumbMenu,
                    SteamVR_Actions.upgradeInput_LThumbMenuRest,
                    SteamVR_Actions.upgradeInput_LThumbAnal,
                    SteamVR_Actions.upgradeInput_LThumbAnalPress,
                    SteamVR_Actions.upgradeInput_LThumbAnalRest,
                    SteamVR_Actions.upgradeInput_RIndexBool,
                    SteamVR_Actions.upgradeInput_RIndexTouch,
                    SteamVR_Actions.upgradeInput_RIndexPress,
                    SteamVR_Actions.upgradeInput_RMiddleBool,
                    SteamVR_Actions.upgradeInput_RMiddleTouch,
                    SteamVR_Actions.upgradeInput_RMiddlePress,
                    SteamVR_Actions.upgradeInput_RThumbA,
                    SteamVR_Actions.upgradeInput_RThumbARest,
                    SteamVR_Actions.upgradeInput_RThumbB,
                    SteamVR_Actions.upgradeInput_RThumbBRest,
                    SteamVR_Actions.upgradeInput_RThumbMenu,
                    SteamVR_Actions.upgradeInput_RThumbMenuRest,
                    SteamVR_Actions.upgradeInput_RThumbAnal,
                    SteamVR_Actions.upgradeInput_RThumbAnalPress,
                    SteamVR_Actions.upgradeInput_RThumbAnalRest};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_buggy_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            SteamVR_Actions.p_buggy_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            SteamVR_Actions.p_buggy_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            SteamVR_Actions.p_buggy_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
            SteamVR_Actions.p_upgradeInput_LIndexBool = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LIndexBool")));
            SteamVR_Actions.p_upgradeInput_LIndexTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LIndexTouch")));
            SteamVR_Actions.p_upgradeInput_LIndexPress = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/UpgradeInput/in/LIndexPress")));
            SteamVR_Actions.p_upgradeInput_LMiddleBool = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LMiddleBool")));
            SteamVR_Actions.p_upgradeInput_LMiddleTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LMiddleTouch")));
            SteamVR_Actions.p_upgradeInput_LMiddlePress = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/UpgradeInput/in/LMiddlePress")));
            SteamVR_Actions.p_upgradeInput_LThumbX = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbX")));
            SteamVR_Actions.p_upgradeInput_LThumbXRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbXRest")));
            SteamVR_Actions.p_upgradeInput_LThumbY = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbY")));
            SteamVR_Actions.p_upgradeInput_LThumbYRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbYRest")));
            SteamVR_Actions.p_upgradeInput_LThumbMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbMenu")));
            SteamVR_Actions.p_upgradeInput_LThumbMenuRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbMenuRest")));
            SteamVR_Actions.p_upgradeInput_LThumbAnal = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/UpgradeInput/in/LThumbAnal")));
            SteamVR_Actions.p_upgradeInput_LThumbAnalPress = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbAnalPress")));
            SteamVR_Actions.p_upgradeInput_LThumbAnalRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/LThumbAnalRest")));
            SteamVR_Actions.p_upgradeInput_RIndexBool = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RIndexBool")));
            SteamVR_Actions.p_upgradeInput_RIndexTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RIndexTouch")));
            SteamVR_Actions.p_upgradeInput_RIndexPress = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/UpgradeInput/in/RIndexPress")));
            SteamVR_Actions.p_upgradeInput_RMiddleBool = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RMiddleBool")));
            SteamVR_Actions.p_upgradeInput_RMiddleTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RMiddleTouch")));
            SteamVR_Actions.p_upgradeInput_RMiddlePress = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/UpgradeInput/in/RMiddlePress")));
            SteamVR_Actions.p_upgradeInput_RThumbA = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbA")));
            SteamVR_Actions.p_upgradeInput_RThumbARest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbARest")));
            SteamVR_Actions.p_upgradeInput_RThumbB = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbB")));
            SteamVR_Actions.p_upgradeInput_RThumbBRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbBRest")));
            SteamVR_Actions.p_upgradeInput_RThumbMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbMenu")));
            SteamVR_Actions.p_upgradeInput_RThumbMenuRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbMenuRest")));
            SteamVR_Actions.p_upgradeInput_RThumbAnal = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/UpgradeInput/in/RThumbAnal")));
            SteamVR_Actions.p_upgradeInput_RThumbAnalPress = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbAnalPress")));
            SteamVR_Actions.p_upgradeInput_RThumbAnalRest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/UpgradeInput/in/RThumbAnalRest")));
            SteamVR_Actions.p_upgradeInput_LShake = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/UpgradeInput/out/LShake")));
            SteamVR_Actions.p_upgradeInput_RShake = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/UpgradeInput/out/RShake")));
        }
    }
}
